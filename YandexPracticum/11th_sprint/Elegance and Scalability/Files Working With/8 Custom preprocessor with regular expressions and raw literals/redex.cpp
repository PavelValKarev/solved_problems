#include <iostream>
#include <regex>


//https://code.s3.yandex.net/CPP/regexp.pdf
//строки можно проверять на соответствие регулярным выражениям

using namespace std;

void PrintFloatInfo(const std::string& text) {
    //группы - скобки, помечают фрагменты регулярного выражения
    //так получили целую и дробную часть
    /*
    Квантификатор после группы символов
    определяет, сколько раз она может повторяться :
    ?       : 0 или 1 раз
    *       : 0 и более раз
    +       : 1 и более раз
    { 2,5 } : от 2 до 5 раз
    { 2, } : 2 и более раз
    { ,5 } : от 0 до 5 раз
    { 2 } : ровно 2 раза
    */
    static regex num_reg("\\s*([+-]?[0-9]+)\\.([0-9]*)(e[+-]?[0-9]+)?\\s*");
    
    //-----------------------------------------------------------------------------
    //Можно не экранировать все слэши. Для этого нужно использовать сырой литерал
    //  Чтобы задать сырой литерал в C++, поставьте перед кавычкой букву R. 
    //  (R"/(    )/")
    //Тоже работает:
    //static regex num_reg(R"/(\s*([+-]?[0-9]+)\.([0-9]*)(e[+-]?[0-9]+)?\s*)/");
    //----------------------------------------------------------------------------
    smatch m;

    if (!regex_match(text, m, num_reg)) {
        cout << text << " - не число с плавающей точкой"sv << endl;
    }
    else {
        cout << text << " - число с целой частью "sv << m[1]
            << ", дробной частью "sv << m[2] << endl;
    }
}

int main() {
    setlocale(LC_ALL, "Ru");
    PrintFloatInfo("aaabbb"s);
    PrintFloatInfo("3.1415926535"s);
    PrintFloatInfo("  123.\t"s);
    PrintFloatInfo("1.2.3"s);
    PrintFloatInfo("10.5a"s);
    PrintFloatInfo("10.5e+05"s);
}
